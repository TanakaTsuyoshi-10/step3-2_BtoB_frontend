name: Deploy to Azure App Service
on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  AZURE_WEBAPP_NAME: app-002-gen10-step3-2-node-oshima2
  NODE_VERSION: '20.x'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      NEXT_PUBLIC_API_BASE: ${{ secrets.NEXT_PUBLIC_API_BASE != '' && secrets.NEXT_PUBLIC_API_BASE || 'https://app-002-gen10-step3-2-py-oshima2.azurewebsites.net/api/v1' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Build Next.js application
        env:
          NODE_ENV: production
          NEXT_PUBLIC_API_BASE: ${{ secrets.NEXT_PUBLIC_API_BASE != '' && secrets.NEXT_PUBLIC_API_BASE || 'https://app-002-gen10-step3-2-py-oshima2.azurewebsites.net/api/v1' }}
        run: |
          echo "Building with API base: $NEXT_PUBLIC_API_BASE"
          npm run build
          
          echo "---- Project routes (app) ----"
          find src/app -maxdepth 3 -name 'page.*' -print 2>/dev/null || true
          echo "---- Project routes (pages) ----"
          find pages -maxdepth 2 -name '*.tsx' -print 2>/dev/null || true
          echo "---- Built routes from .next/server/app ----"
          ls -R .next/server/app 2>/dev/null || true
          echo "---- Built routes from .next/server/pages ----"
          ls -R .next/server/pages 2>/dev/null || true

      - name: Create deployment package
        shell: bash
        run: |
          set -euxo pipefail

          rm -rf deploy && mkdir -p deploy

          # standalone 出力を「隠し項目ごと」完全コピー（末尾 /. がポイント）
          cp -R .next/standalone/. deploy/

          # .next/static は別ツリーなので明示コピー
          mkdir -p deploy/.next/static
          cp -R .next/static/. deploy/.next/static/ || true

          # public があれば同梱
          [ -d public ] && cp -R public deploy/public || true

          # サニティチェック（落ちるなら即失敗させる）
          [ -f "deploy/server.js" ] || { echo "ERROR: server.js missing"; exit 1; }
          [ -f "deploy/.next/BUILD_ID" ] || { echo "ERROR: .next/BUILD_ID missing"; exit 1; }
          [ -d "deploy/.next/static" ] || { echo "ERROR: .next/static missing"; exit 1; }

          echo "Deploy package created successfully"
          ls -la deploy/
          ls -la deploy/.next/

      - name: Create artifact
        shell: bash
        run: |
          set -euxo pipefail
          (cd deploy && zip -qr ../artifact.zip .)
          ls -lh artifact.zip

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: artifact.zip

      - name: Health check
        if: always()
        shell: bash
        run: |
          APP_URL="https://${{ env.AZURE_WEBAPP_NAME }}.azurewebsites.net"
          for i in 1 2 3 4 5; do
            echo "Attempt $i..."
            code=$(curl -s -o /dev/null -w "%{http_code}" "$APP_URL" || echo 000)
            echo "HTTP $code"
            [ "$code" = "200" ] && exit 0
            sleep 20
          done
          exit 1