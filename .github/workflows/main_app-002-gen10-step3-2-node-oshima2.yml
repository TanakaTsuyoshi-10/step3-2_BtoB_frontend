name: Build and deploy Node.js app to Azure Web App

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

concurrency:
  group: deploy-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js 20 LTS
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: npm
          cache-dependency-path: package-lock.json

      - name: Install
        run: npm ci

      - name: Build (Next.js standalone)
        run: |
          npx next telemetry disable || true
          npm run build

          # 配布用フォルダ
          rm -rf deploy && mkdir -p deploy
          # standalone の本体を配置（server.js など）
          cp -R .next/standalone/* deploy/
          # 静的資産
          mkdir -p deploy/.next/static
          cp -R .next/static deploy/.next/static
          # public があれば同梱
          if [ -d public ]; then cp -R public deploy/public; fi

          # 実行用の最小 package.json（npm start -> node server.js）
          cat > deploy/package.json << 'EOF'
          {
            "name": "next-standalone-app",
            "private": true,
            "version": "0.0.1",
            "scripts": {
              "start": "PORT=8080 HOSTNAME=0.0.0.0 node server.js"
            },
            "engines": { "node": ">=20 <21" }
          }
          EOF

          # メタ情報
          echo "deployed $(date -u)" > deploy/DEPLOYED_AT.txt

      - name: Sanity check deploy bundle
        run: |
          echo "== List deploy tree ==" && ls -la deploy | sed -n '1,200p'
          echo "== Must-have files check =="
          [ -f deploy/server.js ] && echo "OK: server.js found" || (echo "NG: server.js missing" && exit 1)
          [ -f deploy/package.json ] && echo "OK: package.json found" || (echo "NG: package.json missing" && exit 1)
          echo "== runtime package.json ==" && cat deploy/package.json

      - name: Archive artifact
        run: (cd deploy && zip -qr ../artifact.zip .)

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: artifact.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: node-app
          path: .

      - name: Cooldown before deploy
        run: sleep 20

      - name: Deploy to Azure Web App (ZIP)
        uses: azure/webapps-deploy@v3
        with:
          app-name: app-002-gen10-step3-2-node-oshima2
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_97ED8F92C96E4A49A32EBE459DDE3312 }}
          package: artifact.zip

      - name: Health check (best-effort)
        if: always()
        run: |
          echo "Waiting for app to start..."
          sleep 45
          APP_URL="https://app-002-gen10-step3-2-node-oshima2.azurewebsites.net"
          code=$(curl -s -o /dev/null -w "%{http_code}" "$APP_URL" || echo 000)
          echo "HTTP $code"